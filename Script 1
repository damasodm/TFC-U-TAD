library(data.table) 
library(caret)
library(plyr)
library(dplyr)
library(VGAM)
library(DMwR) ## K-NN imputation, SMOTE
library(caret) ##  nearZeroVar,downSample
library(corrplot)


library(knitr)
library(ggplot2)

library(corrplot)
library(gridExtra)
library(scales)
library(Rmisc)
library(ggrepel)
library(randomForest)
library(psych)
library(xgboost)

library(h2o)
library(h2oEnsemble)
library(e1071)
# localH2O = h2o.init(nthreads=-1)

#library(e1071) esta librería la he usado para la kurtosis y la asimetría
# la dejo comentada porque la he usado muy poco y también he comentado
# los resultados


# Función para buscar la moda
Mode <- function(x) {
  ux <- na.omit(unique(x) )
  tab <- tabulate(match(x, ux)); ux[tab == max(tab) ]
}

#####################################################################
### Lectura de datos, resúmenes
#####################################################################

# fread es una versión de read.table mucho más rápida
setwd("C:/datos")
#setwd("/Users/DamasoDiaz/home/usuario")

# Leemos los datos con fread y lo guardamos en la variable tra
tra <- read.csv("train.csv", header = TRUE,stringsAsFactors = F)
test <- read.csv("test.csv", header = TRUE,stringsAsFactors = F)

dim(tra)
nrow(test)
nrow(tra)
tra$tt <- 'train'
test$tt <- 'test'
test_labels <- test$Id
test$Id <- NULL
tra$Id <- NULL

test$SalePrice <- NA
all <- rbind(tra, test)
# all <- as.data.table(all)
# all[SalePrice<300000 & GrLivArea>4000,SalePrice]
all <- all[-c(524, 1299),]


# Guardamos las variables numéricas
numericVar <- all[sapply(all,function(x)any(is.numeric(x)))]
NoNnumericVar <- all[sapply(all,function(x)any(!is.numeric(x)))]

# Quitamos SalePrice porque sabemos que en test tiene todo NA
numericVar <- numericVar[,-which(names(numericVar) %in% c("SalePrice"))]
numericVarnames <- names(numericVar)

# Comprobamos que tenemos el mismo número de variables, nos da 1 porque
# hemos excluido SalePrice de las numéricas
(length(all)-length(numericVar)-length(NoNnumericVar))==1



numericNAVar <- numericVar[sapply(numericVar,function(x)any(is.na(x)))]
numericNAVarnames <- names(numericNAVar)
length(numericNAVarnames)



# Imputamos k-vecinos  para las numéricas
numericVar <- knnImputation(numericVar,k=10)
# Vemos que no queda ningún valor con NA
which(sapply(numericVar,function(x)any(is.na(x))))


NoNnumericNaVar <- NoNnumericVar[sapply(NoNnumericVar,function(x)any(is.na(x)))]
length(NoNnumericVar)-length(NoNnumericNaVar)






